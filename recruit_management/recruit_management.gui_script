function init(self)
	-- Add initialization code here
	-- Remove this function if not needed
	msg.post(".", "acquire_input_focus")
	-- Initialise a dummy recruit set
	self.recruits = {
		"Soldier",
		"Wizard",
		"Orc"
	}

	-- Add the recruits to the recruit scroller
	scroll_node = gui.get_node("recruit_scroll_move")
	-- Create new node and put it in the top left corner of scroll pane
	new_text_node = gui.new_text_node(vmath.vector3(0, 0, 0), self.recruits[1])
	-- Set node parent
	gui.set_parent(new_text_node, scroll_node, false)
	-- Set node scale
	scroll_parent_scale = gui.get_scale(gui.get_parent(scroll_node))
	scroll_node_scale = gui.get_scale(scroll_node)
	new_node_scale = vmath.vector3(1 / scroll_node_scale.x / scroll_parent_scale.x, 1 / scroll_node_scale.y / scroll_parent_scale.y, 0)
	gui.set_scale(new_text_node, new_node_scale)
	-- Set node location
	new_node_x = (gui.get_size(scroll_node).x / 2  - gui.get_size(new_text_node).x / 2 * new_node_scale.x) * -1
	new_node_y = (gui.get_size(scroll_node).y / 2 - gui.get_size(new_text_node).y / 2 * new_node_scale.y)
	new_node_pos = vmath.vector3(new_node_x, new_node_y, 0)
	print(new_node_pos)
	gui.set_position(new_text_node, new_node_pos)
end

function final(self)
	-- Add finalization code here
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	-- Add input-handling code here
	-- Remove this function if not needed
	
	if action_id == hash("left_click") and action.pressed then
		-- print("Pressed")
		if gui.pick_node(gui.get_node("recruit_scroll_move"), action.x, action.y) then
			self.current_node_held = "recruit_scroll_move"
		end
		return true
	elseif action_id == hash("left_click") and action.released then
		-- print("Released")
		self.current_node_held = nil
		return true
	elseif action_id == hash("left_click") and not action.repeated then
		if self.current_node_held == "recruit_scroll_move" then
			scroll_node = gui.get_node("recruit_scroll_move")
			scroll_node_pos = gui.get_position(scroll_node)
			gui.set_position(scroll_node, vmath.vector3(scroll_node_pos.x, scroll_node_pos.y + action.dy / 8 / .95, scroll_node_pos.z))
		end
		return true
	end
end

function on_reload(self)
	-- Add input-handling code here
	-- Remove this function if not needed
end
